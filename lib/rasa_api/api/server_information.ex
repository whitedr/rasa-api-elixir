# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule RasaApi.Api.ServerInformation do
  @moduledoc """
  API calls for all endpoints tagged `ServerInformation`.
  """

  alias RasaApi.Connection
  import RasaApi.RequestBuilder


  @doc """
  Health endpoint of Rasa Server
  This URL can be used as an endpoint to run health checks against. When the server is running this will return 200.

  ## Parameters

  - connection (RasaApi.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %RasaApi.Model.String.t{}} on success
  {:error, info} on failure
  """
  @spec get_health(Tesla.Env.client, keyword()) :: {:ok, String.t} | {:error, Tesla.Env.t}
  def get_health(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, false}
    ])
  end

  @doc """
  Status of the Rasa server
  Information about the server and the currently loaded Rasa model.

  ## Parameters

  - connection (RasaApi.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %RasaApi.Model.InlineResponse2001{}} on success
  {:error, info} on failure
  """
  @spec get_status(Tesla.Env.client, keyword()) :: {:ok, RasaApi.Model.InlineResponse2001.t} | {:error, Tesla.Env.t}
  def get_status(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/status")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %RasaApi.Model.InlineResponse2001{}},
      { 401, %RasaApi.Model.Error{}},
      { 403, %RasaApi.Model.Error{}},
      { 409, %RasaApi.Model.Error{}}
    ])
  end

  @doc """
  Version of Rasa
  Returns the version of Rasa.

  ## Parameters

  - connection (RasaApi.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %RasaApi.Model.InlineResponse200{}} on success
  {:error, info} on failure
  """
  @spec get_version(Tesla.Env.client, keyword()) :: {:ok, RasaApi.Model.InlineResponse200.t} | {:error, Tesla.Env.t}
  def get_version(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/version")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %RasaApi.Model.InlineResponse200{}}
    ])
  end
end
